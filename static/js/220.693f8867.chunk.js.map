{"version":3,"file":"static/js/220.693f8867.chunk.js","mappings":"6NACA,EAAuB,sBAAvB,EAAqD,uBAArD,EAAsF,yB,SCMvE,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,eAAyBH,GAASI,KAAKL,EACxC,GAAE,CAACC,KAGF,8BACsB,IAAnBF,EAAQO,QACP,wBACGP,EAAQQ,KAAI,SAAAC,GAAM,OACjB,gBAAoBC,UAAWC,EAA/B,WACE,gBAAID,UAAWC,EAAf,qBAAsCF,EAAOG,WAC7C,cAAGF,UAAWC,EAAd,SAA+BF,EAAOI,YAF/BJ,EAAOK,GADC,OAQrB,iEAIP,C,2EC7BDC,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCACVC,EAAM,CACVC,kBADF,WAQeA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EANbC,aAMF,SAU4B,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAfbC,YAeF,SAS2B,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAvBbC,eAuBF,SAW8B,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAjCbC,uBAiCF,SAWsC,GAAvBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GAzCAJ,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,+FACQK,EADR,qCAC4CP,GAD5C,kBAG2BD,IAAAA,IAAUQ,GAHrC,uBAGYC,EAHZ,EAGYA,KAHZ,kBAIWA,EAAKC,SAJhB,gCAMIC,QAAQC,MAAR,MANJ,gFAUeR,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BjB,GAA5B,kGAE2Ba,IAAAA,IAAA,gBAAmBb,EAAnB,oBAAsCc,IAFjE,uBAEYQ,EAFZ,EAEYA,KAFZ,kBAGWA,GAHX,gCAKIE,QAAQC,MAAR,MALJ,gFASeP,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BlB,GAA3B,kGAE2Ba,IAAAA,IAAA,gBACZb,EADY,4BACec,IAH1C,uBAEYQ,EAFZ,EAEYA,KAFZ,kBAKWA,EAAKI,MALhB,gCAOIF,QAAQC,MAAR,MAPJ,gFAWeN,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BnB,GAA9B,kGAE2Ba,IAAAA,IAAA,gBACZb,EADY,4BACec,EADf,oBAF3B,uBAEYQ,EAFZ,EAEYA,KAFZ,kBAKWA,EAAKC,SALhB,gCAOIC,QAAQC,MAAR,MAPJ,gFAWeL,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAsCO,GAAtC,kFACQN,EADR,+BACsCP,EADtC,kBACuDa,GADvD,kBAG2Bd,IAAAA,IAAUQ,GAHrC,uBAGYC,EAHZ,EAGYA,KAHZ,kBAIWA,EAAKC,SAJhB,gCAMIC,QAAQC,MAAR,MANJ,gFAUA,K","sources":["webpack://goit-react-hw-05-movie/./src/pages/Reviews.module.css?68db","pages/Reviews.js","services/api-service.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Item\":\"Reviews_Item__+h4Vx\",\"Title\":\"Reviews_Title__NF4ch\",\"Content\":\"Reviews_Content__0iy1h\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport moviesApi from '../services/api-service';\n\nimport styles from './Reviews.module.css';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    moviesApi.getReviewsById(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id} className={styles.Item}>\n              <h2 className={styles.Title}>Author: {review.author}</h2>\n              <p className={styles.Content}>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have reviews for this movie</p>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1aaaa4b4eb79ea073919ef453434f2ea';\nconst API = {\n  getTrendingMovies,\n  getMovieById,\n  getCastById,\n  getReviewsById,\n  getMoviesbySearchQuery,\n};\n\nasync function getTrendingMovies() {\n  const url = `trending/movie/day?api_key=${API_KEY}`;\n  try {\n    const { data } = await axios.get(url);\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieById(movieId) {\n  try {\n    const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getCastById(movieId) {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getReviewsById(movieId) {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMoviesbySearchQuery(movieName) {\n  const url = `search/movie?api_key=${API_KEY}&query=${movieName}`;\n  try {\n    const { data } = await axios.get(url);\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default API;\n"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","moviesApi","then","length","map","review","className","styles","author","content","id","axios","API_KEY","API","getTrendingMovies","getMovieById","getCastById","getReviewsById","getMoviesbySearchQuery","url","data","results","console","error","cast","movieName"],"sourceRoot":""}